%eax	Name	%ebx	%ecx	%edx
2	sys_fork	struct pt_regs	-	-
3	sys_read	unsigned int	char *	size_t
4	sys_write	unsigned int	const char *	size_t
5	sys_open	const char *	int	int
6	sys_close	unsigned int	-	-
8	sys_creat	const char *	int	-
19	sys_lseek	unsigned int	off_t	unsigned int

Creating and Opening a File
For creating and opening a file, perform the following tasks −

Put the system call sys_creat() number 8, in the EAX register.
Put the filename in the EBX register.
Put the file permissions in the ECX register.
The system call returns the file descriptor of the created file in the EAX register, in case of error, the error code is in the EAX register.

Opening an Existing File
For opening an existing file, perform the following tasks −

Put the system call sys_open() number 5, in the EAX register.
Put the filename in the EBX register.
Put the file access mode in the ECX register.
Put the file permissions in the EDX register.
The system call returns the file descriptor of the created file in the EAX register, in case of error, the error code is in the EAX register.

Among the file access modes, most commonly used are: read-only (0), write-only (1), and read-write (2).

Reading from a File
For reading from a file, perform the following tasks −

Put the system call sys_read() number 3, in the EAX register.

Put the file descriptor in the EBX register.

Put the pointer to the input buffer in the ECX register.

Put the buffer size, i.e., the number of bytes to read, in the EDX register.

The system call returns the number of bytes read in the EAX register, in case of error, the error code is in the EAX register.

Writing to a File
For writing to a file, perform the following tasks −

Put the system call sys_write() number 4, in the EAX register.

Put the file descriptor in the EBX register.

Put the pointer to the output buffer in the ECX register.

Put the buffer size, i.e., the number of bytes to write, in the EDX register.

The system call returns the actual number of bytes written in the EAX register, in case of error, the error code is in the EAX register.

Closing a File
For closing a file, perform the following tasks −

Put the system call sys_close() number 6, in the EAX register.
Put the file descriptor in the EBX register.
The system call returns, in case of error, the error code in the EAX register.

Updating a File
For updating a file, perform the following tasks −

Put the system call sys_lseek () number 19, in the EAX register.
Put the file descriptor in the EBX register.
Put the offset value in the ECX register.
Put the reference position for the offset in the EDX register.
The reference position could be:

Beginning of file - value 0
Current position - value 1
End of file - value 2
The system call returns, in case of error, the error code in the EAX register.

